#!/bin/sh

repoprefix="git.alt"
repolist=modules.list
repodir=repositories
langlist="ru uk"
potfile=alterator.pot

. shell-error

exit_handler()
{
    trap - TERM EXIT
    clean_repo
}

trap exit_handler TERM EXIT

clean_repo()
{
    message "cleanup"
    rm -rf "$repodir"
}

list_repo()
{
    grep '^[^#]' "$repolist"
}

fetch_repo()
{
    while read repo; do
	mkdir -p "$repodir/${repo%/*}"
	message "fetch $repo"
	git-clone "$repoprefix:$repo" "$repodir/$repo"
    done
}

fix_po()
{
    sed -i \
	-n \
	-e "1 r headers/$1" \
	-e '/#:/,$ p' \
	-- $2
}

update_po()
{
    message "extract po"
    list_repo|
	while read repo; do
    	    if [ -f "$repodir/$repo/${repo##*/}/Makefile" ] ;then
		make -C "$repodir/$repo/${repo##*/}" update-po
	    elif [ -f "$repodir/$repo/Makefile" ] ; then
		make -C "$repodir/$repo" update-po
	    else	
		fatal "Makefile for repository $repo not found"
	    fi
	done

    message "update po"
    echo > $potfile
    for i in $langlist; do touch $i.po; done

    msgcat -o $potfile $potfile `find "$repodir" -name '*.pot'`

    for i in $langlist; do
	msgcat -o $i.po $i.po `find "$repodir" -name "$i.po"`
    done

    fix_po pot.header "$potfile"
    for i in $langlist; do
	msgmerge -U $i.po "$potfile"
	fix_po "$i.header" "$i.po"
    done
}

update_help()
{
    find "$repodir"|
	grep '.*/help/[^/]\+/.*\.html$'|
	while read efile; do
	    local lfile="help/${efile##*/help/}"
	    [ ! -f "$lfile" ] || continue
	    message "add:$lfile"
	    install -Dpm 644 "$efile" "$lfile"
	done
}

mkdir -p "$repodir"
list_repo|fetch_repo

update_po
update_help
